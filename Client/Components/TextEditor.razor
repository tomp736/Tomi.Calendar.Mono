@using Blazored.TextEditor

<BlazoredTextEditor @ref="@QuillHtml" ReadOnly="@ReadOnly">
    <ToolbarContent>
        <select class="ql-header">
            <option selected=""></option>
            <option value="1"></option>
            <option value="2"></option>
            <option value="3"></option>
            <option value="4"></option>
            <option value="5"></option>
        </select>
        <span class="ql-formats">
            <button class="ql-bold"></button>
            <button class="ql-italic"></button>
            <button class="ql-underline"></button>
            <button class="ql-strike"></button>
        </span>
        <span class="ql-formats">
            <select class="ql-color"></select>
            <select class="ql-background"></select>
        </span>
        <span class="ql-formats">
            <button class="ql-list" value="ordered"></button>
            <button class="ql-list" value="bullet"></button>
        </span>
        <span class="ql-formats">
            <button class="ql-link"></button>
        </span>
    </ToolbarContent>
    <EditorContent>
        @((MarkupString)HTMLContent)
    </EditorContent>
</BlazoredTextEditor>

@code{
    BlazoredTextEditor QuillHtml;

    [Parameter]
    public string HTMLContent { get; set; }

    [Parameter]
    public bool ReadOnly { get; set; }

    public async Task SetHtmlContent(string content)
    {
        await this.QuillHtml.LoadHTMLContent(content);
    }

    public async Task<string> GetHtmlContent()
    {
        return await this.QuillHtml.GetHTML();
    }
}